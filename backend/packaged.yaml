AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Jake's Bachelor Party RSVP Application
Parameters:
  StageName:
    Type: String
    Default: prod
    Description: Stage name for the API deployment
  CertificateArn:
    Type: String
    Description: ARN of the SSL certificate for the domain
  CertificateRegion:
    Type: String
    Default: us-east-1
    Description: Region where the SSL certificate is stored (must be us-east-1 for
      CloudFront)
Resources:
  RsvpTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: JakeBachelorParty-RSVP-${StageName}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      - AttributeName: guestCode
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      GlobalSecondaryIndexes:
      - IndexName: guestCodeIndex
        KeySchema:
        - AttributeName: guestCode
          KeyType: HASH
        Projection:
          ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  RsvpCounterTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: JakeBachelorParty-RSVP-Counter-${StageName}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
  SubmitRsvpFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://jake-bachelor-party-deployment-1744099481/088266e3f94289b319d47a5cc64aabb2
      Handler: submitRsvp.handler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 10
      Environment:
        Variables:
          RSVP_TABLE_NAME:
            Ref: RsvpTable
          COUNTER_TABLE_NAME:
            Ref: RsvpCounterTable
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: RsvpTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: RsvpCounterTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /rsvp
            Method: post
            RestApiId:
              Ref: ApiGateway
        GetRsvpCountEvent:
          Type: Api
          Properties:
            Path: /rsvp/count
            Method: get
            RestApiId:
              Ref: ApiGateway
        GetRsvpByGuestCodeEvent:
          Type: Api
          Properties:
            Path: /rsvp/guest/{guestCode}
            Method: get
            RestApiId:
              Ref: ApiGateway
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: StageName
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
      Auth:
        DefaultAuthorizer: NONE
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      OwnershipControls:
        Rules:
        - ObjectOwnership: ObjectWriter
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: WebsiteBucket
      PolicyDocument:
        Statement:
        - Action: s3:GetObject
          Effect: Allow
          Resource:
            Fn::Sub: ${WebsiteBucket.Arn}/*
          Principal: '*'
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - DomainName:
            Fn::GetAtt:
            - WebsiteBucket
            - DomainName
          Id: S3Origin
          S3OriginConfig:
            OriginAccessIdentity: ''
        Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn:
            Ref: CertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        Aliases:
        - jakeisgettingmarried.com
        - www.jakeisgettingmarried.com
        CustomErrorResponses:
        - ErrorCode: 404
          ResponseCode: 200
          ResponsePagePath: /index.html
  DomainRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: jakeisgettingmarried.com.
      Name: jakeisgettingmarried.com.
      Type: A
      AliasTarget:
        DNSName:
          Fn::GetAtt:
          - CloudFrontDistribution
          - DomainName
        HostedZoneId: Z2FDTNDATAQYW2
        EvaluateTargetHealth: false
  WwwDomainRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: jakeisgettingmarried.com.
      Name: www.jakeisgettingmarried.com.
      Type: A
      AliasTarget:
        DNSName:
          Fn::GetAtt:
          - CloudFrontDistribution
          - DomainName
        HostedZoneId: Z2FDTNDATAQYW2
        EvaluateTargetHealth: false
Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL for the RSVP API
    Value:
      Fn::Sub: https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/rsvp
  WebsiteURL:
    Description: URL for the S3 website
    Value:
      Fn::GetAtt:
      - WebsiteBucket
      - WebsiteURL
  CloudFrontURL:
    Description: CloudFront Distribution URL
    Value:
      Fn::Sub: https://${CloudFrontDistribution.DomainName}
  RsvpCounterTableName:
    Description: Name of the DynamoDB table for RSVP counter
    Value:
      Ref: RsvpCounterTable
