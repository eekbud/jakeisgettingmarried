AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Jake's Bachelor Party RSVP Application

Parameters:
  StageName:
    Type: String
    Default: prod
    Description: Stage name for the API deployment
  CertificateArn:
    Type: String
    Description: ARN of the SSL certificate for the domain
  CertificateRegion:
    Type: String
    Default: us-east-1
    Description: Region where the SSL certificate is stored (must be us-east-1 for CloudFront)

Resources:
  # DynamoDB Table for storing RSVP responses
  RsvpTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub JakeBachelorParty-RSVP-${StageName}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: guestCode
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: guestCodeIndex
          KeySchema:
            - AttributeName: guestCode
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  # DynamoDB Table for tracking RSVP counts
  RsvpCounterTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub JakeBachelorParty-RSVP-Counter-${StageName}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

  # Lambda function to handle RSVP submissions
  SubmitRsvpFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: submitRsvp.handler
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 10
      Environment:
        Variables:
          RSVP_TABLE_NAME: !Ref RsvpTable
          COUNTER_TABLE_NAME: !Ref RsvpCounterTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref RsvpTable
        - DynamoDBCrudPolicy:
            TableName: !Ref RsvpCounterTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /rsvp
            Method: post
            RestApiId: !Ref ApiGateway
        GetRsvpCountEvent:
          Type: Api
          Properties:
            Path: /rsvp/count
            Method: get
            RestApiId: !Ref ApiGateway

  # API Gateway for the RSVP API
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
      Auth:
        DefaultAuthorizer: NONE

  # S3 Bucket for hosting the React application
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter

  # Bucket policy to allow public access to the website
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub ${WebsiteBucket.Arn}/*
            Principal: '*'

  # CloudFront distribution for the website
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt WebsiteBucket.DomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: ''
        Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        Aliases:
          - jakeisgettingmarried.com
          - www.jakeisgettingmarried.com
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html

  # Route 53 record set for the domain
  DomainRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: jakeisgettingmarried.com.
      Name: jakeisgettingmarried.com.
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # CloudFront hosted zone ID (constant value)
        EvaluateTargetHealth: false

  # WWW subdomain record set
  WwwDomainRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: jakeisgettingmarried.com.
      Name: www.jakeisgettingmarried.com.
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # CloudFront hosted zone ID (constant value)
        EvaluateTargetHealth: false

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL for the RSVP API"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/rsvp"

  WebsiteURL:
    Description: "URL for the S3 website"
    Value: !GetAtt WebsiteBucket.WebsiteURL

  CloudFrontURL:
    Description: "CloudFront Distribution URL"
    Value: !Sub "https://${CloudFrontDistribution.DomainName}"

  RsvpCounterTableName:
    Description: Name of the DynamoDB table for RSVP counter
    Value: !Ref RsvpCounterTable
